@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":EditCommandParser" as EditCommandParser LOGIC_COLOR
participant ":ParserUtil" as ParserUtil LOGIC_COLOR
participant ":EditOrderCommandParser" as EditOrderCommandParser LOGIC_COLOR
participant "e:EditOrderCommand" as EditOrderCommand LOGIC_COLOR
participant "r:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant "m:Model" as Model MODEL_COLOR
end box

box Storage STORAGE_COLOR
participant ":Storage" as Storage STORAGE_COLOR_T1
end box

[-> LogicManager : execute("edit o/1")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("edit o/1")
activate AddressBookParser

create EditCommandParser
AddressBookParser -> EditCommandParser
activate EditCommandParser

EditCommandParser --> AddressBookParser
deactivate EditCommandParser

AddressBookParser -> EditCommandParser : parse("o/1")
activate EditCommandParser

create ParserUtil
EditCommandParser -> ParserUtil : isCustomer("o/1")
activate ParserUtil
ParserUtil --> EditCommandParser
destroy ParserUtil

create EditOrderCommandParser
EditCommandParser -> EditOrderCommandParser : parse("o/1")
activate EditOrderCommandParser

create EditOrderCommand
EditOrderCommandParser -> EditOrderCommand
activate EditOrderCommand
EditOrderCommand --> EditOrderCommandParser
deactivate EditOrderCommand

EditOrderCommandParser --> EditCommandParser
destroy EditOrderCommandParser

EditCommandParser --> AddressBookParser : e
deactivate EditCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
EditCommandParser -[hidden]-> AddressBookParser
destroy EditCommandParser

AddressBookParser --> LogicManager : e
deactivate AddressBookParser

LogicManager -> EditOrderCommand : execute(m)
activate EditOrderCommand

EditOrderCommand -> Model : getOrder(id)
activate Model
Model --> EditOrderCommand

EditOrderCommand -> Model : findProductByIndex(id)
Model --> EditOrderCommand

EditOrderCommand -> Model : setOrder(order, order)
Model --> EditOrderCommand

EditOrderCommand -> Model : updateFilteredOrderList(predicate)
Model --> EditOrderCommand
deactivate Model

create CommandResult
EditOrderCommand -> CommandResult
activate CommandResult

CommandResult --> EditOrderCommand
deactivate CommandResult

EditOrderCommand --> LogicManager
deactivate EditOrderCommand

create Storage
LogicManager -> Storage
activate Storage

Storage --> LogicManager
deactivate Storage

[<--LogicManager
deactivate LogicManager
@enduml
